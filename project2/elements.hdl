/**
 * Computes the sum of two bits.
 * a b | carry sum
 * 0 0 | 0     0
 * 0 1 | 0     1
 * 1 0 | 0     1
 * 1 1 | 1     0
 */
CHIP HalfAdder {
    IN a, b;    // 1-bit inputs
    OUT sum,    // Right bit of a + b 
        carry;  // Left bit of a + b

    PARTS:
    And(a=a , b=b , out=carry );
    Xor(a=a , b=b , out=sum );
}

/**
 * Computes the sum of three bits.
 * a b c | carry sum
 * 0 0 0 | 0     0
 * 0 0 1 | 0     1
 * 0 1 0 | 0     1
 * 0 1 1 | 1     0
 * 1 0 0 | 0     1
 * 1 0 1 | 1     0
 * 1 1 0 | 1     0
 * 1 1 1 | 1     1
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    HalfAdder(a=a , b=b , sum=sumab , carry=carryab );
    HalfAdder(a=sumab , b=c , sum=sum , carry=carryabc );
    Or(a=carryab , b=carryabc , out=carry );
}

/**
 * 16-bit adder: Adds two 16-bit two's complement values.
 * The most significant carry bit is ignored.
 */
CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    HalfAdder(a=a[0] , b=b[0] , sum=out[0] , carry=carry0 );
    FullAdder(a=carry0 , b=a[1] , c=b[1] ,    sum=out[1] , carry=carry1 );
    FullAdder(a=carry1 , b=a[2] , c=b[2] ,    sum=out[2] , carry=carry2 );
    FullAdder(a=carry2 , b=a[3] , c=b[3] ,    sum=out[3] , carry=carry3 );
    FullAdder(a=carry3 , b=a[4] , c=b[4] ,    sum=out[4] , carry=carry4 );
    FullAdder(a=carry4 , b=a[5] , c=b[5] ,    sum=out[5] , carry=carry5 );
    FullAdder(a=carry5 , b=a[6] , c=b[6] ,    sum=out[6] , carry=carry6 );
    FullAdder(a=carry6 , b=a[7] , c=b[7] ,    sum=out[7] , carry=carry7 );
    FullAdder(a=carry7 , b=a[8] , c=b[8] ,    sum=out[8] , carry=carry8 );
    FullAdder(a=carry8 , b=a[9] ,  c=b[9] ,   sum=out[9] ,  carry=carry9 );
    FullAdder(a=carry9 , b=a[10] , c=b[10] ,  sum=out[10] , carry=carry10 );
    FullAdder(a=carry10 , b=a[11] , c=b[11] , sum=out[11] , carry=carry11 );
    FullAdder(a=carry11 , b=a[12] , c=b[12] , sum=out[12] , carry=carry12 );
    FullAdder(a=carry12 , b=a[13] , c=b[13] , sum=out[13] , carry=carry13 );
    FullAdder(a=carry13 , b=a[14] , c=b[14] , sum=out[14] , carry=carry14 );
    FullAdder(a=carry14 , b=a[15] , c=b[15] , sum=out[15] , carry=carry15 );
}

/**
 * 16-bit incrementer:
 * out = in + 1
 */
CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:

    Add16(a = in, b[0] = true , out = out );
}
