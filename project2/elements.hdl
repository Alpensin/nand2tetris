/**
 * Computes the sum of two bits.
 * a b | carry sum
 * 0 0 | 0     0
 * 0 1 | 0     1
 * 1 0 | 0     1
 * 1 1 | 1     0
 */
CHIP HalfAdder {
    IN a, b;    // 1-bit inputs
    OUT sum,    // Right bit of a + b 
        carry;  // Left bit of a + b

    PARTS:
    And(a=a , b=b , out=carry );
    Xor(a=a , b=b , out=sum );
}

/**
 * Computes the sum of three bits.
 * a b c | carry sum
 * 0 0 0 | 0     0
 * 0 0 1 | 0     1
 * 0 1 0 | 0     1
 * 0 1 1 | 1     0
 * 1 0 0 | 0     1
 * 1 0 1 | 1     0
 * 1 1 0 | 1     0
 * 1 1 1 | 1     1
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    HalfAdder(a=a , b=b , sum=sumab , carry=carryab );
    HalfAdder(a=sumab , b=c , sum=sum , carry=carryabc );
    Or(a=carryab , b=carryabc , out=carry );
}
